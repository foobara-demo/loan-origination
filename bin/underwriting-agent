#!/usr/bin/env ruby

ENV["BUNDLE_GEMFILE"] ||= File.expand_path("./Gemfile", __dir__)
require "bundler/setup"

# add your keys/urls to .env or set them some other way and delete these two lines
require "foobara/load_dotenv"
Foobara::LoadDotenv.run!(dir: __dir__)

require "foobara/anthropic_api" if ENV.key?("ANTHROPIC_API_KEY")
require "foobara/open_ai_api" if ENV.key?("OPENAI_API_KEY")
# require "foobara/ollama_api" if ENV.key?("OLLAMA_API_URL")

require_relative "../boot"

require "foobara/agent_cli"

# works:
# llm_model = "claude-sonnet-4-20250514"
# llm_model = "claude-3-7-sonnet-20250219"
# llm_model = "claude-opus-4-20250514"

# Incorrectly approved the first loan without checking the credit policy at all.
# Didn't bother to try to review the next one despite being prompted to.
# It did correctly deny basil after being told to check the credit policy and be more careful
# but it doesn't look like it actually loaded the credit policy hmm... maybe just a totally lucky guess??
# This was also painfully slow but used nodeshift and maybe that's why?
# llm_model = "deepseek-r1:70b"
# Incorrectly reviewed Barbara. Couldn't get it to reliably find other ones to review.
# llm_model = "chatgpt-4o-latest"

# llm_model = "deepseek-r1:32b"

agent = Foobara::Agent.new(agent_name: "UnderwritingAgent", llm_model:, verbose: true)

agent.connect(FoobaraDemo::LoanOrigination::FindALoanFileThatNeedsReview)
agent.connect(FoobaraDemo::LoanOrigination::StartUnderwriterReview)
agent.connect(FoobaraDemo::LoanOrigination::ApproveLoanFile)
agent.connect(FoobaraDemo::LoanOrigination::DenyLoanFile)
agent.connect(FoobaraDemo::LoanOrigination::FindCreditPolicy)

agent.run_cli
